SLURM_JOBID=2836661
SLURM_JOB_NODELIST=cpn-f11-11
SLURM_NNODES=1
SLURMTMPDIR=/scratch/2836661
working directory=/gpfs/.../budgetdata/academic/alexeyak/brendan/workflows/for_repository/Model/step4/2_state_const/dt_0.1fs/de_0.01/msdm_dish/1fs/V01_0.003/bastida
NPROCS=12

The following have been reloaded with a version change:
  1) intel/17.0 => intel/16.0


The following have been reloaded with a version change:
  1) intel-mpi/2017.0.1 => intel-mpi/5.1.1


The following have been reloaded with a version change:
  1) mkl/2017.0.1 => mkl/11.3

The Intel compilers are in your path. This is adequate for compiling and
running most codes. Source
/util/academic/intel/17.0/compilers_and_libraries_2017/linux/bin/compilervars.sh
for more features. 
 Intel-MPI is in your path. This is adequate for compiling and running most
codes. Source the
/util/academic/intel/17.0/compilers_and_libraries_2017/linux/mpi/intel64/bin/mpivars.sh
file for more features. 
 The MKL Libraries are in your library path. This is adequate for compiling and
running most codes. Source $MKL/bin/mklvars.sh" for more features. 

The following have been reloaded with a version change:
  1) intel-mpi/5.1.1 => intel-mpi/2017.0.1     3) mkl/11.3 => mkl/2017.0.1
  2) intel/16.0 => intel/17.0

run_2state.py:9: RuntimeWarning: to-Python converter for std::vector<std::complex<double>, std::allocator<std::complex<double> > > already registered; second conversion method ignored.
  from liblibra_core import *
run_2state.py:9: RuntimeWarning: to-Python converter for std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > already registered; second conversion method ignored.
  from liblibra_core import *
run_2state.py:9: RuntimeWarning: to-Python converter for boost::python::detail::container_element<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, unsigned long, boost::python::detail::final_vector_derived_policies<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, false> > already registered; second conversion method ignored.
  from liblibra_core import *
run_2state.py:9: RuntimeWarning: to-Python converter for std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > > already registered; second conversion method ignored.
  from liblibra_core import *
run_2state.py:9: RuntimeWarning: to-Python converter for boost::python::detail::container_element<std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >, unsigned long, boost::python::detail::final_vector_derived_policies<std::vector<std::vector<float, std::allocator<float> >, std::allocator<std::vector<float, std::allocator<float> > > >, false> > already registered; second conversion method ignored.
  from liblibra_core import *
run_2state.py:9: RuntimeWarning: to-Python converter for std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > > already registered; second conversion method ignored.
  from liblibra_core import *
run_2state.py:9: RuntimeWarning: to-Python converter for boost::python::detail::container_element<std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >, unsigned long, boost::python::detail::final_vector_derived_policies<std::vector<std::vector<double, std::allocator<double> >, std::allocator<std::vector<double, std::allocator<double> > > >, false> > already registered; second conversion method ignored.
  from liblibra_core import *
run_2state.py:9: RuntimeWarning: to-Python converter for boost::python::detail::container_element<std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >, unsigned long, boost::python::detail::final_vector_derived_policies<std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >, false> > already registered; second conversion method ignored.
  from liblibra_core import *
All Done!
